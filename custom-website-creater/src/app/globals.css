@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

/* create new CSS variable which are edited by or even added using the buildScript */
:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --background-landing: url('./icons/about.jpg');

  /* 
    colors not properly defined yet => standard color schemes maybe to choose
    would allow to easily change all colors depending on the wish of the customer 
    => the idea is to preselect a few coloring options and then let the customer choose which one he likes the most
  */
  --main-color: rgb(42, 0, 110);
  --second-color: rgb(0, 0, 0);
  --third-color: rgb(255, 255, 255);
  --surface-color: rgb(0, 0, 0);
  --onMain-color: rgb(255, 255, 255);
  --onSecond-color: rgb(255, 255, 255);
  --onThird-color: rgb(0, 0, 0);
  --onSurface-color: rgb(255, 255, 255);
  
  /* main focus on websit => can be removed here (to make it thiccc again) XD */
  scrollbar-width: thin;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

nav {
  background: var(--main-color);
}

/* Selects every 2nd section */
section:nth-of-type(2n){
  background: var(--main-color);
}

#Landing{
  background-image: var(--background-landing);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  position: relative;
}

#Landing::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.headlineConfig{
  font-weight: 700;
  font-size: 3.75rem;
  line-height: 1;
  padding-top: 10vh;
  padding-bottom: 10vh;
}

.headlineConfig:hover{
  opacity: 0.85;
}

.imageContainer:hover span{
  display: block;
  position: relative;
  background-color: var(--onMain-color);
  color: var(--main-color);
  transition: all 0.5s ease;
  padding: 5%;
  bottom: 10%;
  width: inherit;
}

.imageContainer span{
  bottom: 0;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* responsive */
.responsiveMobileHeader, .responsiveTabletHeader {
  display: none;
}

.burgerIcon {
  display: flex;
  height: fit-content;
  cursor: pointer;
  justify-content: space-between;
  align-items: flex-end;
  flex-direction: column;
  gap: 5px;
}

.burgerIcon div {
	width: 30px;
	height: 3px;
	background-color: var(--onMain-color);
}

.toggleDisplayNoneNavSlide {
  display: none !important;
}

.navSlide {
  transform: translateX(150%);
  transition: all 1s ease-in-out;
  display: none;
}

.navSlideTranslate{
  transform: translateX(0%);
}




@media (max-width: 1000px) {
  .responsiveDesktopHeader {
    display: none;
  }

  .responsiveTabletHeader {
    display: flex;
  }
  
  .burgerIcon {
    display: flex;
  }

  .navSlide{
    display: flex;
  }

  #contactFooter{
    grid-template-columns: auto 1fr 1fr;
  }

  #contactFooter div, ul{
    border: none;
  }

  .servicePreviewBox{
    width: 45%;
  }

  .servicesContainer{
    grid-template-columns: 1fr 1fr;
    justify-content: space-evenly;
  }

  .landingHeadline{
    max-width: 66%;
  }

  .landingHeadline h2{
    font-size: 3rem;
  }

}

@media (max-width: 800px) {
  #contactFooter{
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
  }

  .landingHeadline{
    max-width: 70%;
  }

  .landingHeadline h2{
    font-size: 2.5rem;
  }
}


@media (max-width: 600px) {
  .responsiveTabletHeader {
    display: none;
  }

  .responsiveMobileHeader {
    display: flex;
  }

  .servicePreviewBox{
    width: 100%;
  }

  .servicesContainer{
    flex-direction: column;
    justify-content: space-evenly;
  }
  
  .landingHeadline{
    max-width: unset;
    width: 90%;
    margin: 0 5%;
    left: 0;
  }
}


/* Animations */


@keyframes navLinksFade {
  from{
      opacity: 0;
      transform: translateX(200%);
  }to{
      opacity: 1;
      transform: translateX(0%);
  }
}